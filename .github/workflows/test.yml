name: quarto-setup

on: 
  push:
    branches: main

jobs:
  conditional_job_check_files:
    runs-on: 'ubuntu-20.04'
    # Declare outputs for next jobs
    outputs:
      docs_changed: ${{ steps.check_file_changed.outputs.docs_changed }}
    steps:
    - uses: actions/checkout@v2
      with:
        # Checkout as many commits as needed for the diff
        fetch-depth: 2
    - shell: pwsh
      id: check_file_changed
      run: |
        # Diff HEAD with the previous commit
        $diff = git diff --name-only HEAD^ HEAD
      
        # Check if a file under docs/ or with the .md extension has changed (added, modified, deleted)
        $SourceDiff = $diff | Where-Object { $_ -match '^docs/' -or $_ -match 'Dockerfile$' }
        $HasDiff = $SourceDiff.Length -gt 0
     
        # Set the output named "docs_changed"
        Write-Host "::set-output name=docs_changed::$HasDiff"
     
      
   # Run the job only with "docs_changed" equals "True"
  Docker_Image_Update:
    runs-on: ubuntu-latest
    needs: [ conditional_job_check_files ]
    if: needs.conditional_job_check_files.outputs.docs_changed == 'True'
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
     
      - uses: actions/checkout@v1
      - run: |
           pwd
           ls -la
          
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: jpgomezz/newquarto-test:latest            
          
  Quarto-Rendering:
    needs: Docker_Image_Update
    runs-on: ubuntu-latest
    container: jpgomezz/newquarto-test:latest          
    steps:
     - uses: actions/checkout@v1
       
       name: Rendering Files
     - run: |
          cd /__w/quarto-actions/quarto-actions/
          quarto render --to html
          ls public/markdown/
          
     - uses: actions/upload-artifact@master
       with:
        name: my-artifact
        path: public/markdown/

  SFTP-Transfer:
    needs: Quarto-Rendering
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository content
        uses: actions/checkout@master
      - uses: actions/download-artifact@master
        with:
         name: my-artifact
         path: public/markdown/
      - run: | 
          echo CHECKING ARTIFACT
          ls -la /home/runner/work/quarto-actions/quarto-actions/public/markdown/
          
      - name: Preparing Environment
        run: |   
          mkdir -p ${{ secrets.SSH_PATH }}
          touch /home/runner/.ssh/known_hosts
          touch ${{ secrets.SSH_CONFIG_PATH }}
          echo "${{ secrets.SSH_CONFIG }}" >> ${{ secrets.SSH_CONFIG_PATH }}
          echo "${{ secrets.PRIVATEKEY }}" > "/home/runner/.ssh/id_rsa"    
          echo "${{ secrets.PUBLICKEY }}" > "/home/runner/.ssh/id_rsa.pub"      
          echo "${{ secrets.KNOWN_HOSTS }}" > "/home/runner/.ssh/known_hosts"
          chmod 700 "/home/runner/.ssh/"
          chmod 644 "/home/runner/.ssh/known_hosts"
          chmod 600 "/home/runner/.ssh/id_rsa"
          chmod 644 "/home/runner/.ssh/id_rsa.pub"
          chmod 600 "/home/runner/.ssh/config"
     
      - name: Installing Terminus
        uses: kopepasah/setup-pantheon-terminus@master
        with:
          pantheon-machine-token: ${{ secrets.PANTHEON_MACHINE_TOKEN }}
      
      - name: Development mode to SFTP
        if: success()
        run: |
          terminus site:list
          terminus connection:set jptest1.dev sftp
          sleep 60

      - name: Transferring files to Pantheon
        run: |
          sftp -oPort=2222 dev.6ea2702b-ed4d-4196-b545-10c1de13b528@appserver.dev.6ea2702b-ed4d-4196-b545-10c1de13b528.drush.in <<END
          put -r /home/runner/work/quarto-actions/quarto-actions/public/markdown/* /files/
          
      - name: Development mode back to Git
        if: success()
        run: |
          terminus site:list
          terminus connection:set jptest1.dev git
      
